#include <bits/stdc++.h>

using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define rep(j,n) for(int j=0;j<n;j++)
#define fu(i,a,n) for(int i=a;i<=n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)

#define gi(n) scanf("%d",&n)
#define gl(n) cin >> n
#define pi(n) printf("%d",n)
#define pl(n) cout << n
#define ps printf(" ")

inline int inp()
{
  int n = 0, c = getchar_unlocked(), f = 1;
  while(c != '-' && (c < '0' || c > '9')) c = gc();
  if(c == '-')
    {
      f = -1;
      c = gc();
    }
  while(c >= '0' && c <= '9')
    n = (n<<3) + (n<<1) + c - '0', c = gc();
  return n * f;
}
 
int main(){
  int t,n,i,j;
  t=inp();//gi(t);
  while(t--){
    n=inp();
    int arr[n][n],lkp[n][n];
    rep(i,n)
      for(j=0;j<n;j++)
	arr[i][j]=inp();
    lkp[0][0]=0;
    for(i=1;i<n;i++)//rep(i,n)
      lkp[0][i]=arr[0][i]+lkp[0][i-1];
    for(i=1;i<n;i++)//rep(i,n)
      lkp[i][0]=arr[i][0]+lkp[i-1][0];
    for(i=1;i<n;i++){
      for(j=1;j<n;j++){
	lkp[i][j]=max(lkp[i][j-1],lkp[i-1][j])+arr[i][j];
      }
    }
    if(lkp[i-1][j-1]<0)
      printf("Bad Judges");
    else
      printf("%lf",(float)lkp[i-1][j-1]/(2*n-3));//pi(arr[i-1][j-1]);
    printf("\n");
  }
  return 0;
}
